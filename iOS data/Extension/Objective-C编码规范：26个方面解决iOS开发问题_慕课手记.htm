<!DOCTYPE html>
<!-- saved from url=(0033)http://www.imooc.com/article/1216 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>
Objective-C编码规范：26个方面解决iOS开发问题_慕课手记
</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1">
<meta name="renderer" content="webkit">
<meta property="qc:admins" content="77103107776157736375">
<meta property="wb:webmaster" content="c4f857219bfae3cb">
<meta http-equiv="Access-Control-Allow-Origin" content="*">
<meta http-equiv="Cache-Control" content="no-transform ">



<meta name="Description" content="文章源自：http://www.90159.com/2015/06/17/Objective-C编码规范：26个方面解决iOS开发问题/ 介绍 我们制定Objective-C编码规">




<link rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/moco.min.css" type="text/css">

<script src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/push.js"></script><script type="text/javascript" async="" src="http://cpro.baidu.com/cpro/ui/rt.js"></script><script type="text/javascript">

eval(function(p,a,c,k,e,d){e=function(c){return(c<a?"":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1;};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p;}('!4(){3 6=a;3 l=4(){3 b,e=9 y("(^| )"+"c=([^;]*)(;|$)");j(b=h.g.z(e)){k w(b[2])}x{k a}};3 8=4(t){3 f=l();3 7=9 o();7.A(7.d()+B*i*i*r);h.g="c="+t+";s="+7.M()+";N=/;L=O.m";j(t&&t!=f){Q.P.G()}};3 5=9 E();5.H=4(){K(6);6=a;8(0)};5.J=4(){8(1)};6=I(4(){5.n="";8(1)},F);5.n=\'R://p.u.m/p/v/q/D.C?t=\'+9 o().d()}()',54,54,'|||var|function|imgobj|timer|exp|setcookie|new|null|arr|IMCDNS|getTime|reg|_0|cookie|document|60|if|return|getcookie|com|src|Date|static|common|1000|expires||mukewang|img|unescape|else|RegExp|match|setTime|24|png|logo|Image|3000|reload|onload|setTimeout|onerror|clearTimeout|domain|toGMTString|path|imooc|location|window|http'.split('|'),0,{}))

</script>
<script type="text/javascript">
  var OP_CONFIG={"module":"article","page":"details"};
  var isLogin = 0;
var is_choice = "";
  var seajsTimestamp="v=2016081011958";
  </script>


<script>
var pageInfo = {
    id: "1216",
    praiseNum:"22"
}
var user = {
    uid : "",
    img : "",
    nickname : ""
}
var authorUid = {
    uid : '264930'
}
</script>

<link rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/saved_resource" type="text/css">
<script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/jquery.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/seajs-text.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/common.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/string.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/moco.min.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/cookie.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/suggest.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/store.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/json.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/im.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/details.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/socket.io.min.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/prettify.js"></script><link charset="utf-8" rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/prettify.css"><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/ueditor.parse.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/layer.min.js"></script><link charset="utf-8" rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/layer.css"><link charset="utf-8" rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/ueditor.css"><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/addCopy.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/imgPreview.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/praise.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/verify-code.js"></script><script charset="utf-8" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/mo.min.js"></script><script src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/share.js"></script><link rel="stylesheet" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/share_style0_16.css"><link id="syntaxhighlighter_css" rel="stylesheet" type="text/css" href="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/shCoreDefault.css"><script id="syntaxhighlighter_js" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/shCore.js" type="text/javascript" defer="defer"></script></head>
<body>

<div id="header">
    <div class="page-container" id="nav">
        <div id="logo" class="logo"><a href="http://www.imooc.com/" target="_self" class="hide-text">慕课网</a></div>


        <button type="button" class="navbar-toggle visible-xs-block js-show-menu">
            <i class="icon-menu"></i>
        </button>
        <ul class="nav-item">
                        <li class="set-btn visible-xs-block"><a href="http://www.imooc.com/user/newlogin" target="_self">登录</a> / <a href="http://www.imooc.com/user/newsignup" target="_self">注册</a></li>
                        <li>
                 <a href="http://www.imooc.com/" target="_self">首页</a>
            </li>
            <li>
                <a href="http://coding.imooc.com/" target="_self">实战</a>
            </li>
            <li><a href="http://www.imooc.com/course/program" target="_self">路径</a></li>
            <li><a href="http://www.imooc.com/wenda" target="_self">猿问</a></li>
            <li><a href="http://www.imooc.com/article" class="active" target="_self">手记</a></li>
            
        </ul>

                <div id="login-area">
            <ul class="header-unlogin clearfix">
                <li class="header-app">
                    <a href="http://www.imooc.com/mobile/app">
                        <span class="icon-appdownload"></span>
                    </a>
                    <div class="QR-download">
                        <p id="app-text">慕课网APP下载</p>
                        <p id="app-type">iPhone / Android / iPad</p>
                        <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/QR-code.jpg">
                    </div>
                </li>
                <li class="header-signin">
                    <a href="http://www.imooc.com/article/1216#" id="js-signin-btn">登录</a>
                </li>
                <li class="header-signup">
                    <a href="http://www.imooc.com/article/1216#" id="js-signup-btn">注册</a>
                </li>
            </ul>
        </div>
        


        <div class="search-warp clearfix" style="min-width: 32px; height: 60px;">
            
            <div class="search-area" data-search="top-banner">
                <input class="search-input" data-suggest-trigger="suggest-trigger" placeholder="请输入想搜索的内容..." type="text" autocomplete="off">
                <input type="hidden" class="btn_search" data-search-btn="search-btn">
                <ul class="search-area-result" data-suggest-result="suggest-result">
                </ul>
            </div>
            <div class="showhide-search" data-show="no"><i class="icon-search"></i></div>
        </div>
    </div>
</div>

<div class="bindHintBox js-bindHintBox hide">
    <div class="pr">
        为了账号安全，请及时绑定邮箱和手机<a href="http://www.imooc.com/user/setbindsns" class="ml20 color-red" target="_blank">立即绑定</a>
        <button class="closeBindHint js-closeBindHint" type="button"></button>
        <div class="arrow"> </div>
    </div>
</div>


<script>
var isLogin=0
</script>
<div class="opus-wrap clearfix">

<div class="detail-left l">
    <!-- 面包屑 -->
    <div class="detail-path">
        <a href="http://www.imooc.com/article">手记</a> \
        <span>Objective-C编码规范：26个方面解决iOS开发问题</span>
    </div>
    <!-- 面包屑end -->
    <!-- 手记详情 -->
    <div class="detail-content-wrap">
        <h1 class="detail-title">
        Objective-C编码规范：26个方面解决iOS开发问题
                </h1>
        <div class="dc-addon clearfix">
            <div class="dc-profile clearfix">
                <span class="spacer l">2015-07-09 16:53:23</span>
                <span class="spacer l spacer-2">5631浏览</span>
                <a class="spacer l" href="http://www.imooc.com/article/1216#comment">0评论</a>
                            </div>
        </div>

        <div class="detail-content ">
            <pre class="prettyprint"><code><span class="pun">文章源自：</span><span class="pln">http</span><span class="pun">:</span><span class="com">//www.90159.com/2015/06/17/Objective-C编码规范：26个方面解决iOS开发问题/ </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">介绍</strong>
<p>我们制定Objective-C编码规范的原因是我们能够在我们的书，教程和初学者工具包的代码保持优雅和一致。即使我们有很多不同的作者来完成不同的书籍。</p>
<p>这里编码规范有可能与你看到的其他Objective-C编码规范不同，因为它主要是为了打印和Web的易读性。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">关于作者</strong>
<p>这编码规范的创建是由很多来自raywenderlich.com团队成员在Nicholas Waynik的带领下共同完成的。团队成员有：Soheil Moayedi Azarpour、Ricardo Rendon Cepeda、Tony Dahbura、Colin Eberhardt、Matt Galloway、Greg Heo、Matthijs Hollemans、Christopher LaPollo、Saul Mora、Andy Pereira、Mic Pringle、Pietro Rea、Cesare Rocchi、Marin Todorov、Nicholas Waynik和Ray Wenderlich。</p>
<p>我们也非常感谢New York Times 和Robots &amp; Pencils’Objective-C编码规范的作者。这两个编码规范为本指南的创建提供很好的起点。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">背景</strong>
<p>这里有些关于编码风格Apple官方文档，如果有些东西没有提及，可以在以下文档来查找更多细节：</p>
<ul>
<li>
<p>The Objective-C Programming Language ：<br>
<a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html" target="_blank">https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html</a></p>
</li>
<li>
<p>Cocoa Fundamentals Guide ：<br>
<a href="https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html" target="_blank">https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html</a></p>
</li>
<li>
<p>Coding Guidelines for Cocoa ：<br>
<a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html" target="_blank">https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html</a></p>
</li>
<li>iOS App Programming Guide：<br>
<a href="https://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html" target="_blank">https://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html</a></li>
</ul>
<strong style="display:block;font-size:22px;margin:22px 0 10px">语言</strong>
<p>应该使用US英语。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">UIColor</span><span class="pln"> </span><span class="pun">*</span><span class="pln">myColor </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">UIColor</span><span class="pln"> whiteColor</span><span class="pun">];</span><span class="pln"> </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="typ">UIColor</span><span class="pln"> </span><span class="pun">*</span><span class="pln">myColour </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">UIColor</span><span class="pln"> whiteColor</span><span class="pun">];</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">代码组织</strong>
<p>在函数分组和<code>protocol</code>/<code>delegate</code>实现中使用<code>#pragma mark -</code>来分类方法，要遵循以下一般结构：</p>
<pre class="prettyprint"><code><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Lifecycle</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">init </span><span class="pun">{}</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">dealloc </span><span class="pun">{}</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">viewDidLoad </span><span class="pun">{}</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">viewWillAppear</span><span class="pun">:(</span><span class="pln">BOOL</span><span class="pun">)</span><span class="pln">animated </span><span class="pun">{}</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">didReceiveMemoryWarning </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Custom</span><span class="pln"> </span><span class="typ">Accessors</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">setCustomProperty</span><span class="pun">:(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">value </span><span class="pun">{}</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">customProperty </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">IBActions</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IBAction</span><span class="pun">)</span><span class="pln">submitData</span><span class="pun">:(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">sender </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Public</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">publicMethod </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Private</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">privateMethod </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Protocol</span><span class="pln"> conformance  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">UITextFieldDelegate</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">UITableViewDataSource</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">UITableViewDelegate</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">NSCopying</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">copyWithZone</span><span class="pun">:(</span><span class="typ">NSZone</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">zone </span><span class="pun">{}</span><span class="pln">  
</span><span class="com">#pragma</span><span class="pln"> mark </span><span class="pun">-</span><span class="pln"> </span><span class="typ">NSObject</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">description </span><span class="pun">{}</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">空格</strong>
<ul>
<li>缩进使用4个空格，确保在Xcode偏好设置来设置。（raywenderlich.com使用2个空格）</li>
<li>方法大括号和其他大括号(if/else/switch/while 等.)总是在同一行语句打开但在新行中关闭。</li>
</ul>
<p>应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">user</span><span class="pun">.</span><span class="pln">isHappy</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="com">//Do something  </span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="com">//Do something else  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">user</span><span class="pun">.</span><span class="pln">isHappy</span><span class="pun">)</span><span class="pln">  
</span><span class="pun">{</span><span class="pln">  
  </span><span class="com">//Do something  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  
</span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="com">//Do something else  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<ul>
<li>在方法之间应该有且只有一行，这样有利于在视觉上更清晰和更易于组织。在方法内的空白应该分离功能，但通常都抽离出来成为一个新方法。</li>
<li>优先使用<code>auto-synthesis</code>。但如果有必要，@synthesize和@dynamic应该在实现中每个都声明新的一行。</li>
<li>应该避免以冒号对齐的方式来调用方法。因为有时方法签名可能有3个以上的冒号和冒号对齐会使代码更加易读。请不要这样做，尽管冒号对齐的方法包含代码块，因为Xcode的对齐方式令它难以辨认。</li>
</ul>
<p>应该：</p>
<pre class="prettyprint"><code><span class="com">// blocks are easily readable  </span><span class="pln">
</span><span class="pun">[</span><span class="typ">UIView</span><span class="pln"> animateWithDuration</span><span class="pun">:</span><span class="lit">1.0</span><span class="pln"> animations</span><span class="pun">:^{</span><span class="pln">  
  </span><span class="com">// something  </span><span class="pln">
</span><span class="pun">}</span><span class="pln"> completion</span><span class="pun">:^(</span><span class="pln">BOOL finished</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="com">// something  </span><span class="pln">
</span><span class="pun">}];</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="com">// colon-aligning makes the block indentation hard to read  </span><span class="pln">
</span><span class="pun">[</span><span class="typ">UIView</span><span class="pln"> animateWithDuration</span><span class="pun">:</span><span class="lit">1.0</span><span class="pln">  
                 animations</span><span class="pun">:^{</span><span class="pln">  
                     </span><span class="com">// something  </span><span class="pln">
                 </span><span class="pun">}</span><span class="pln">  
                 completion</span><span class="pun">:^(</span><span class="pln">BOOL finished</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
                     </span><span class="com">// something  </span><span class="pln">
                 </span><span class="pun">}];</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">注释</strong>
<p>当需要注释时，注释应该用来解释这段特殊代码为什么要这样做。任何被使用的注释都必须保持最新或被删除。</p>
<p>一般都避免使用块注释，因为代码尽可能做到自解释，只有当断断续续或几行代码时才需要注释。例外：这不应用在生成文档的注释。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">命名</strong>
<p>Apple命名规则尽可能坚持，特别是与这些相关的memory management rules (NARC)。</p>
<p>长的，描述性的方法和变量命名是好的。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">UIButton</span><span class="pln"> </span><span class="pun">*</span><span class="pln">settingsButton</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="typ">UIButton</span><span class="pln"> </span><span class="pun">*</span><span class="pln">setBut</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>三个字符前缀应该经常用在类和常量命名，但在Core Data的实体名中应被忽略。对于官方的raywenderlich.com书、初学者工具包或教程，前缀<code>RWT</code>应该被使用。</p>
<p>常量应该使用驼峰式命名规则，所有的单词首字母大写和加上与类名有关的前缀。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="kwd">static</span><span class="pln"> </span><span class="typ">NSTimeInterval</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">RWTTutorialViewControllerNavigationFadeAnimationDuration</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0.3</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="kwd">static</span><span class="pln"> </span><span class="typ">NSTimeInterval</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> fadetime </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1.7</span><span class="pun">;</span><span class="pln"> </span></code></pre>
<p>属性也是使用驼峰式，但首单词的首字母小写。对属性使用<code>auto-synthesis</code>，而不是手动编写@synthesize语句，除非你有一个好的理由。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">descriptiveVariableName</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="pln">id varnm</span><span class="pun">;</span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">下划线</strong>
<p>当使用属性时，实例变量应该使用<code>self.</code>来访问和改变。这就意味着所有属性将会视觉效果不同，因为它们前面都有<code>self.</code>。</p>
<p>但有一个特例：在初始化方法里，实例变量(例如，<code>_variableName</code>)应该直接被使用来避免<code>getters</code>/<code>setters</code>潜在的副作用。</p>
<p>局部变量不应该包含下划线。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">方法</strong>
<p>在方法签名中，应该在方法类型(-/+ 符号)之后有一个空格。在方法各个段之间应该也有一个空格(符合Apple的风格)。在参数之前应该包含一个具有描述性的关键字来描述参数。</p>
<p>“<code>and</code>”这个词的用法应该保留。它不应该用于多个参数来说明，就像<code>initWithWidth:height</code>以下这个例子：</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">setExampleText</span><span class="pun">:(</span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">text image</span><span class="pun">:(</span><span class="typ">UIImage</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">image</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">sendAction</span><span class="pun">:(</span><span class="pln">SEL</span><span class="pun">)</span><span class="pln">aSelector to</span><span class="pun">:(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">anObject forAllCells</span><span class="pun">:(</span><span class="pln">BOOL</span><span class="pun">)</span><span class="pln">flag</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">viewWithTag</span><span class="pun">:(</span><span class="typ">NSInteger</span><span class="pun">)</span><span class="pln">tag</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">initWithWidth</span><span class="pun">:(</span><span class="typ">CGFloat</span><span class="pun">)</span><span class="pln">width height</span><span class="pun">:(</span><span class="typ">CGFloat</span><span class="pun">)</span><span class="pln">height</span><span class="pun">;</span><span class="pln"> </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">setT</span><span class="pun">:(</span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">text i</span><span class="pun">:(</span><span class="typ">UIImage</span><span class="pln"> </span><span class="pun">*)</span><span class="pln">image</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">sendAction</span><span class="pun">:(</span><span class="pln">SEL</span><span class="pun">)</span><span class="pln">aSelector </span><span class="pun">:(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">anObject </span><span class="pun">:(</span><span class="pln">BOOL</span><span class="pun">)</span><span class="pln">flag</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">id</span><span class="pun">)</span><span class="pln">taggedView</span><span class="pun">:(</span><span class="typ">NSInteger</span><span class="pun">)</span><span class="pln">tag</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">initWithWidth</span><span class="pun">:(</span><span class="typ">CGFloat</span><span class="pun">)</span><span class="pln">width andHeight</span><span class="pun">:(</span><span class="typ">CGFloat</span><span class="pun">)</span><span class="pln">height</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">initWith</span><span class="pun">:(</span><span class="kwd">int</span><span class="pun">)</span><span class="pln">width </span><span class="kwd">and</span><span class="pun">:(</span><span class="kwd">int</span><span class="pun">)</span><span class="pln">height</span><span class="pun">;</span><span class="pln">  </span><span class="com">// Never do this.  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">变量</strong>
<p>变量尽量以描述性的方式来命名。单个字符的变量命名应该尽量避免，除了在<code>for()</code>循环。</p>
<p>星号表示变量是指针。例如：</p>
<p>NSString *text</p>
<p>既不是 NSString* text</p>
<p>也不是 NSString * text，除了一些特殊情况下常量。</p>
<p>私有变量应该尽可能代替实例变量的使用。尽管使用实例变量是一种有效的方式，但更偏向于使用属性来保持代码一致性。</p>
<p>通过使用’<code>back</code>’属性(<code>_variable</code>，变量名前面有下划线)直接访问实例变量应该尽量避免，除了在初始化方法<code>(init,</code> <code>initWithCoder:</code>, 等…)，<code>dealloc</code> 方法和自定义的<code>setters</code>和<code>getters</code>。想了解关于如何在初始化方法和<code>dealloc</code>直接使用<code>Accessor</code>方法的更多信息，查看这里。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="lit">@interface</span><span class="pln"> </span><span class="typ">RWTTutorial</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">NSObject</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@end</span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="lit">@interface</span><span class="pln"> </span><span class="typ">RWTTutorial</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="typ">NSObject</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">属性特性</strong>
<p>所有属性特性应该显式地列出来，有助于新手阅读代码。属性特性的顺序应该是storage、atomicity，与在Interface Builder连接UI元素时自动生成代码一致。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">weak</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">IBOutlet</span><span class="pln"> </span><span class="typ">UIView</span><span class="pln"> </span><span class="pun">*</span><span class="pln">containerView</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">nonatomic</span><span class="pun">,</span><span class="pln"> weak</span><span class="pun">)</span><span class="pln"> </span><span class="typ">IBOutlet</span><span class="pln"> </span><span class="typ">UIView</span><span class="pln"> </span><span class="pun">*</span><span class="pln">containerView</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p><code>NSString</code>应该使用<code>copy</code>而不是<code>strong</code>的属性特性。</p>
<p>为什么？即使你声明一个<code>NSString</code>的属性，有人可能传入一个<code>NSMutableString</code>的实例，然后在你没有注意的情况下修改它。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">copy</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln">tutorialName</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">点符号语法</strong>
<p>点语法是一种很方便封装访问方法调用的方式。当你使用点语法时，通过使用<code>getter</code>或<code>setter</code>方法，属性仍然被访问或修改。想了解更多。<br>
<strong>阅读:</strong> <a href="https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/EncapsulatingData/EncapsulatingData.html" target="_blank">https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/EncapsulatingData/EncapsulatingData.html</a> </p>
<p>点语法应该总是被用来访问和修改属性，因为它使代码更加简洁。<code>[]</code>符号更偏向于用在其他例子。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="pln">objc  
</span><span class="typ">NSInteger</span><span class="pln"> arrayCount </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="kwd">self</span><span class="pun">.</span><span class="pln">array count</span><span class="pun">];</span><span class="pln">  
view</span><span class="pun">.</span><span class="pln">backgroundColor </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">UIColor</span><span class="pln"> orangeColor</span><span class="pun">];</span><span class="pln">  
</span><span class="pun">[</span><span class="typ">UIApplication</span><span class="pln"> sharedApplication</span><span class="pun">].</span><span class="kwd">delegate</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="typ">NSInteger</span><span class="pln"> arrayCount </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">array</span><span class="pun">.</span><span class="pln">count</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">[</span><span class="pln">view setBackgroundColor</span><span class="pun">:[</span><span class="typ">UIColor</span><span class="pln"> orangeColor</span><span class="pun">]];</span><span class="pln">  
</span><span class="typ">UIApplication</span><span class="pun">.</span><span class="pln">sharedApplication</span><span class="pun">.</span><span class="kwd">delegate</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">字面值</strong>
<p><code>NSString</code>、<code>NSDictionary</code>、<code>NSArray</code>和<code>NSNumber</code>的字面值应该在创建这些类的不可变实例时被使用。请特别注意<code>nil</code>值不能传入<code>NSArray</code>和<code>NSDictionary</code>字面值，因为这样会导致crash。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">NSArray</span><span class="pln"> </span><span class="pun">*</span><span class="pln">names </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@[@</span><span class="str">"Brian"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Matt"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Chris"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Alex"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Steve"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Paul"</span><span class="pun">];</span><span class="pln">  
</span><span class="typ">NSDictionary</span><span class="pln"> </span><span class="pun">*</span><span class="pln">productManagers </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@{@</span><span class="str">"iPhone"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Kate"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"iPad"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Kamal"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Mobile Web"</span><span class="pun">:</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Bill"</span><span class="pun">};</span><span class="pln">  
</span><span class="typ">NSNumber</span><span class="pln"> </span><span class="pun">*</span><span class="pln">shouldUseLiterals </span><span class="pun">=</span><span class="pln"> </span><span class="lit">@YES</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">NSNumber</span><span class="pln"> </span><span class="pun">*</span><span class="pln">buildingStreetNumber </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@</span><span class="lit">10018</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该:</p>
<pre class="prettyprint"><code><span class="typ">NSArray</span><span class="pln"> </span><span class="pun">*</span><span class="pln">names </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSArray</span><span class="pln"> arrayWithObjects</span><span class="pun">:@</span><span class="str">"Brian"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Matt"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Chris"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Alex"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Steve"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Paul"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">];</span><span class="pln">  
</span><span class="typ">NSDictionary</span><span class="pln"> </span><span class="pun">*</span><span class="pln">productManagers </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSDictionary</span><span class="pln"> dictionaryWithObjectsAndKeys</span><span class="pun">:</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Kate"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"iPhone"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Kamal"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"iPad"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Bill"</span><span class="pun">,</span><span class="pln"> </span><span class="pun">@</span><span class="str">"Mobile Web"</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">];</span><span class="pln">  
</span><span class="typ">NSNumber</span><span class="pln"> </span><span class="pun">*</span><span class="pln">shouldUseLiterals </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSNumber</span><span class="pln"> numberWithBool</span><span class="pun">:</span><span class="pln">YES</span><span class="pun">];</span><span class="pln">  
</span><span class="typ">NSNumber</span><span class="pln"> </span><span class="pun">*</span><span class="pln">buildingStreetNumber </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="typ">NSNumber</span><span class="pln"> numberWithInteger</span><span class="pun">:</span><span class="lit">10018</span><span class="pun">];</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">常量</strong>
<p>常量是容易重复被使用和无需通过查找和代替就能快速修改值。常量应该使用<code>static</code>来声明而不是使用<code>#define</code>，除非显式地使用宏。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="kwd">static</span><span class="pln"> </span><span class="typ">NSString</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">RWTAboutViewControllerCompanyName</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">@</span><span class="str">"RayWenderlich.com"</span><span class="pun">;</span><span class="pln">  
</span><span class="kwd">static</span><span class="pln"> </span><span class="typ">CGFloat</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="typ">RWTImageThumbnailHeight</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">50.0</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="com">#define</span><span class="pln"> </span><span class="typ">CompanyName</span><span class="pln"> </span><span class="pun">@</span><span class="str">"RayWenderlich.com"</span><span class="pln">  
</span><span class="com">#define</span><span class="pln"> thumbnailHeight </span><span class="lit">2</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">枚举类型</strong>
<p>当使用enum时，推荐使用新的固定基本类型规格，因为它有更强的类型检查和代码补全。现在SDK有一个宏<code>NS_ENUM()</code>来帮助和鼓励你使用固定的基本类型。</p>
<p>例如：</p>
<pre class="prettyprint"><code><span class="kwd">typedef</span><span class="pln"> NS_ENUM</span><span class="pun">(</span><span class="typ">NSInteger</span><span class="pun">,</span><span class="pln"> </span><span class="typ">RWTLeftMenuTopItemType</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="typ">RWTLeftMenuTopItemMain</span><span class="pun">,</span><span class="pln">  
  </span><span class="typ">RWTLeftMenuTopItemShows</span><span class="pun">,</span><span class="pln">  
  </span><span class="typ">RWTLeftMenuTopItemSchedule</span><span class="pln">  
</span><span class="pun">};</span><span class="pln">  </span></code></pre>
<p>你也可以显式地赋值(展示旧的<code>k-style</code>常量定义)：</p>
<pre class="prettyprint"><code><span class="kwd">typedef</span><span class="pln"> NS_ENUM</span><span class="pun">(</span><span class="typ">NSInteger</span><span class="pun">,</span><span class="pln"> </span><span class="typ">RWTGlobalConstants</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="typ">RWTPinSizeMin</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">  
  </span><span class="typ">RWTPinSizeMax</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">,</span><span class="pln">  
  </span><span class="typ">RWTPinCountMin</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">100</span><span class="pun">,</span><span class="pln">  
  </span><span class="typ">RWTPinCountMax</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">500</span><span class="pun">,</span><span class="pln">  
</span><span class="pun">};</span><span class="pln">  </span></code></pre>
<p>旧的<code>k-style</code>常量定义应该避免除非编写Core Foundation C的代码。</p>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="kwd">enum</span><span class="pln"> </span><span class="typ">GlobalConstants</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  kMaxPinSize </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">,</span><span class="pln">  
  kMaxPinCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">500</span><span class="pun">,</span><span class="pln">  
</span><span class="pun">};</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">Case语句</strong>
<p>大括号在case语句中并不是必须的，除非编译器强制要求。当一个case语句包含多行代码时，大括号应该加上。</p>
<pre class="prettyprint"><code><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">condition</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">1</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">2</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="com">// Multi-line example using braces  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="pun">}</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">3</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">default</span><span class="pun">:</span><span class="pln">   
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>有很多次，当相同代码被多个cases使用时，一个<code>fall-through</code>应该被使用。一个f<code>all-through</code>就是在case最后移除’<code>break</code>’语句，这样就能够允许执行流程跳转到下一个case值。为了代码更加清晰，一个<code>fall-through</code>需要注释一下。</p>
<pre class="prettyprint"><code><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">condition</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">1</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ** fall-through! **  </span><span class="pln">
  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">2</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// code executed for values 1 and 2  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">default</span><span class="pun">:</span><span class="pln">   
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>当在switch使用枚举类型时，’<code>default</code>’是不需要的。例如：</p>
<pre class="prettyprint"><code><span class="typ">RWTLeftMenuTopItemType</span><span class="pln"> menuType </span><span class="pun">=</span><span class="pln"> </span><span class="typ">RWTLeftMenuTopItemMain</span><span class="pun">;</span><span class="pln">  
</span><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">menuType</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">RWTLeftMenuTopItemMain</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">RWTLeftMenuTopItemShows</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">case</span><span class="pln"> </span><span class="typ">RWTLeftMenuTopItemSchedule</span><span class="pun">:</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln"> </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">私有属性</strong>
<p>私有属性应该在类的实现文件中的类扩展(匿名分类)中声明，命名分类(比如<code>RWTPrivate</code>或<code>private</code>)应该从不使用除非是扩展其他类。匿名分类应该通过使用<code>+Private.h</code>文件的命名规则暴露给测试。</p>
<p>例如：</p>
<pre class="prettyprint"><code><span class="lit">@interface</span><span class="pln"> </span><span class="typ">RWTDetailViewController</span><span class="pln"> </span><span class="pun">()</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">GADBannerView</span><span class="pln"> </span><span class="pun">*</span><span class="pln">googleAdView</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">ADBannerView</span><span class="pln"> </span><span class="pun">*</span><span class="pln">iAdView</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">strong</span><span class="pun">,</span><span class="pln"> nonatomic</span><span class="pun">)</span><span class="pln"> </span><span class="typ">UIWebView</span><span class="pln"> </span><span class="pun">*</span><span class="pln">adXWebView</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@end</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">布尔值</strong>
<p>Objective-C使用YES和NO。因为true和false应该只在CoreFoundation，C或C++代码使用。既然nil解析成NO，所以没有必要在条件语句比较。不要拿某样东西直接与YES比较，因为YES被定义为1和一个BOOL能被设置为8位。</p>
<p>这是为了在不同文件保持一致性和在视觉上更加简洁而考虑。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">someObject</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(![</span><span class="pln">anotherObject boolValue</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">someObject </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">([</span><span class="pln">anotherObject boolValue</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> NO</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">isAwesome </span><span class="pun">==</span><span class="pln"> YES</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln"> </span><span class="com">// Never do this.  </span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">isAwesome </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln"> </span><span class="com">// Never do this.  </span></code></pre>
<p>如果<code>BOOL</code>属性的名字是一个形容词，属性就能忽略”<code>is</code>”前缀，但要指定get访问器的惯用名称。例如：</p>
<pre class="prettyprint"><code><span class="lit">@property</span><span class="pln"> </span><span class="pun">(</span><span class="pln">assign</span><span class="pun">,</span><span class="pln"> getter</span><span class="pun">=</span><span class="pln">isEditable</span><span class="pun">)</span><span class="pln"> BOOL editable</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>文字和例子从这里引用Cocoa Naming Guidelines。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">条件语句</strong>
<p>条件语句主体为了防止出错应该使用大括号包围，即使条件语句主体能够不用大括号编写(如，只用一行代码)。这些错误包括添加第二行代码和期望它成为if语句；还有，even more dangerous defect可能发生在if语句里面一行代码被注释了，然后下一行代码不知不觉地成为if语句的一部分。除此之外，这种风格与其他条件语句的风格保持一致，所以更加容易阅读。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">error</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">return</span><span class="pln"> success</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">error</span><span class="pun">)</span><span class="pln">  
  </span><span class="kwd">return</span><span class="pln"> success</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>或</p>
<pre class="prettyprint"><code><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">error</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> success</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">三元操作符</strong>
<p>当需要提高代码的清晰性和简洁性时，三元操作符?:才会使用。单个条件求值常常需要它。多个条件求值时，如果使用if语句或重构成实例变量时，代码会更加易读。一般来说，最好使用三元操作符是在根据条件来赋值的情况下。</p>
<p><code>Non-boolean</code>的变量与某东西比较，加上括号()会提高可读性。如果被比较的变量是<code>boolean</code>类型，那么就不需要括号。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">NSInteger</span><span class="pln"> value </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pun">;</span><span class="pln">  
result </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">value </span><span class="pun">!=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> x </span><span class="pun">:</span><span class="pln"> y</span><span class="pun">;</span><span class="pln">  
BOOL isHorizontal </span><span class="pun">=</span><span class="pln"> YES</span><span class="pun">;</span><span class="pln">  
result </span><span class="pun">=</span><span class="pln"> isHorizontal </span><span class="pun">?</span><span class="pln"> x </span><span class="pun">:</span><span class="pln"> y</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="pln">result </span><span class="pun">=</span><span class="pln"> a </span><span class="pun">&gt;</span><span class="pln"> b </span><span class="pun">?</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> c </span><span class="pun">&gt;</span><span class="pln"> d </span><span class="pun">?</span><span class="pln"> c </span><span class="pun">:</span><span class="pln"> d </span><span class="pun">:</span><span class="pln"> y</span><span class="pun">;</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">Init方法</strong>
<p>Init方法应该遵循Apple生成代码模板的命名规则，返回类型应该使用<code>instancetype</code>而不是<code>id</code>。</p>
<pre class="prettyprint"><code><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">init </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">self</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="kwd">super</span><span class="pln"> init</span><span class="pun">];</span><span class="pln">  
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">self</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="com">// ...  </span><span class="pln">
  </span><span class="pun">}</span><span class="pln">  
  </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">类构造方法</strong>
<p>当类构造方法被使用时，它应该返回类型是<code>instancetype</code>而不是<code>id</code>。这样确保编译器正确地推断结果类型。</p>
<pre class="prettyprint"><code><span class="lit">@interface</span><span class="pln"> </span><span class="typ">Airplane</span><span class="pln">  
</span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">airplaneWithType</span><span class="pun">:(</span><span class="typ">RWTAirplaneType</span><span class="pun">)</span><span class="pln">type</span><span class="pun">;</span><span class="pln">  
</span><span class="lit">@end</span><span class="pln">  </span></code></pre>
<p>关于更多instancetype信息，请查看NSHipster.com。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">CGRect函数</strong>
<p>当访问CGRect里的<code>x</code>, <code>y</code>, <code>width</code>, 或 <code>height</code>时，应该使用CGGeometry函数而不是直接通过结构体来访问。引用Apple的CGGeometry：</p>
<ul>
<li>在这个参考文档中所有的函数，接受CGRect结构体作为输入，在计算它们结果时隐式地标准化这些rectangles。因此，你的应用程序应该避免直接访问和修改保存在CGRect数据结构中的数据。相反，使用这些函数来操纵rectangles和获取它们的特性。</li>
</ul>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">CGRect</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">view</span><span class="pun">.</span><span class="pln">frame</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGRectGetMinX</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">);</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGRectGetMinY</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">);</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> width </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGRectGetWidth</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">);</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> height </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGRectGetHeight</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">);</span><span class="pln">  
</span><span class="typ">CGRect</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGRectMake</span><span class="pun">(</span><span class="lit">0.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">);</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="typ">CGRect</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">view</span><span class="pun">.</span><span class="pln">frame</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">origin</span><span class="pun">.</span><span class="pln">x</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">origin</span><span class="pun">.</span><span class="pln">y</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> width </span><span class="pun">=</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">size</span><span class="pun">.</span><span class="pln">width</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGFloat</span><span class="pln"> height </span><span class="pun">=</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">size</span><span class="pun">.</span><span class="pln">height</span><span class="pun">;</span><span class="pln">  
</span><span class="typ">CGRect</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">CGRect</span><span class="pun">){</span><span class="pln"> </span><span class="pun">.</span><span class="pln">origin </span><span class="pun">=</span><span class="pln"> </span><span class="typ">CGPointZero</span><span class="pun">,</span><span class="pln"> </span><span class="pun">.</span><span class="pln">size </span><span class="pun">=</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">size </span><span class="pun">};</span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">黄金路径</strong>
<p>当使用条件语句编码时，左手边的代码应该是”<code>golden</code>” 或 “<code>happy</code>”路径。也就是不要嵌套if语句，多个返回语句也是OK。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">someMethod </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(![</span><span class="pln">someOther boolValue</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">  
  </span><span class="pun">}</span><span class="pln">  
  </span><span class="com">//Do something important  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="pun">-</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">void</span><span class="pun">)</span><span class="pln">someMethod </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">([</span><span class="pln">someOther boolValue</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
    </span><span class="com">//Do something important  </span><span class="pln">
  </span><span class="pun">}</span><span class="pln">  
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">错误处理</strong>
<p>当方法通过引用来返回一个错误参数，判断返回值而不是错误变量。</p>
<p>应该：</p>
<pre class="prettyprint"><code><span class="typ">NSError</span><span class="pln"> </span><span class="pun">*</span><span class="pln">error</span><span class="pun">;</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(![</span><span class="kwd">self</span><span class="pln"> trySomethingWithError</span><span class="pun">:&amp;</span><span class="pln">error</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="com">// Handle Error  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>不应该：</p>
<pre class="prettyprint"><code><span class="typ">NSError</span><span class="pln"> </span><span class="pun">*</span><span class="pln">error</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">[</span><span class="kwd">self</span><span class="pln"> trySomethingWithError</span><span class="pun">:&amp;</span><span class="pln">error</span><span class="pun">];</span><span class="pln">  
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">error</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">  
  </span><span class="com">// Handle Error  </span><span class="pln">
</span><span class="pun">}</span><span class="pln">  </span></code></pre>
<p>在成功的情况下，有些Apple的APIs记录垃圾值(<code>garbage values</code>)到错误参数(如果<code>non-NULL</code>)，那么判断错误值会导致<code>false</code>负值和<code>crash</code>。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">单例模式</strong>
<p>单例对象应该使用线程安全模式来创建共享实例。</p>
<pre class="prettyprint"><code><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instancetype</span><span class="pun">)</span><span class="pln">sharedInstance </span><span class="pun">{</span><span class="pln">  
  </span><span class="kwd">static</span><span class="pln"> id sharedInstance </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">nil</span><span class="pun">;</span><span class="pln">  
  </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">dispatch_once_t</span><span class="pln"> onceToken</span><span class="pun">;</span><span class="pln">  
  dispatch_once</span><span class="pun">(&amp;</span><span class="pln">onceToken</span><span class="pun">,</span><span class="pln"> </span><span class="pun">^{</span><span class="pln">  
    sharedInstance </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[[</span><span class="kwd">self</span><span class="pln"> alloc</span><span class="pun">]</span><span class="pln"> init</span><span class="pun">];</span><span class="pln">  
  </span><span class="pun">});</span><span class="pln">  
  </span><span class="kwd">return</span><span class="pln"> sharedInstance</span><span class="pun">;</span><span class="pln">  
</span><span class="pun">}</span><span class="pln"> </span></code></pre>
<p>这会防止possible and sometimes prolific crashes。</p>
<strong style="display:block;font-size:22px;margin:22px 0 10px">换行符</strong>
<p>换行符是一个很重要的主题，因为它的风格指南主要为了打印和网上的可读性。</p>
<p>例如：</p>
<pre class="prettyprint"><code><span class="kwd">self</span><span class="pun">.</span><span class="pln">productsRequest </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[[</span><span class="typ">SKProductsRequest</span><span class="pln"> alloc</span><span class="pun">]</span><span class="pln"> initWithProductIdentifiers</span><span class="pun">:</span><span class="pln">productIdentifiers</span><span class="pun">];</span><span class="pln">  </span></code></pre>
<p>一行很长的代码应该分成两行代码，下一行用两个空格隔开。</p>
<pre class="prettyprint"><code><span class="kwd">self</span><span class="pun">.</span><span class="pln">productsRequest </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[[</span><span class="typ">SKProductsRequest</span><span class="pln"> alloc</span><span class="pun">]</span><span class="pln">   
  initWithProductIdentifiers</span><span class="pun">:</span><span class="pln">productIdentifiers</span><span class="pun">];</span><span class="pln">  </span></code></pre>
<strong style="display:block;font-size:22px;margin:22px 0 10px">Xcode工程</strong>
<p>物理文件应该与Xcode工程文件保持同步来避免文件扩张。任何Xcode分组的创建应该在文件系统的文件体现。代码不仅是根据类型来分组，而且还可以根据功能来分组，这样代码更加清晰。</p>
<p>尽可能在<code>target</code>的<code>Build Settings</code>打开”<code>Treat Warnings as Errors</code>，和启用以下<code>additional warnings</code>。如果你需要忽略特殊的警告，使用<code>Clang’s pragma feature</code>。</p>
<blockquote>
<p>原文地址：<a href="https://github.com/raywenderlich/objective-c-style-guide" target="_blank">https://github.com/raywenderlich/objective-c-style-guide</a><br>
译者简介：刘耀柱（@Sam_Lau_Dev），iOS Developer兼业余Designer</p>
</blockquote>
        </div>
                <!-- 标签 -->
            
        <!-- 推荐 --> 
                <div class="praise-box">
            <button id="js-praise"><span class="icon-thumb_o"></span><div style="position: absolute; top: 50%; left: 50%; width: 230px; height: 230px; margin-left: -115px; margin-top: -115px; opacity: 0.6; display: none; transform: rotate(0deg) translate(0px, 0px);"><svg style="position: absolute; width: 100%; height: 100%;"><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="15" rx="15" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="#F9B552" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse></svg></div><div style="position: absolute; top: 50%; left: 50%; width: 180px; height: 180px; margin-left: -90px; margin-top: -90px; opacity: 0.6; display: none; transform: translate(0px, 0px);"><svg style="position: absolute; width: 100%; height: 100%;"><ellipse cy="90" cx="90" ry="0" rx="0" transform="rotate(0,90,90)" fill-opacity="transparent" stroke-linecap="" stroke-dashoffset="" fill="transparent" stroke-dasharray="" stroke-opacity="1" stroke-width="20" stroke="#F9B552"></ellipse></svg></div></button>
        </div>
                
        <div class="show-praise-wrap">
            <div class="show-praise-user clearfix">
                <div class="praise-icon l">
                    <ul id="js-praise-show" class="clearfix">
                    <li class="l"><a target="_blank" href="http://www.imooc.com/u/267698/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/53eaf5100001e97d01000100-100-100.jpg" title="神奇的六阿哥">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/1178114/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/551dfb8700013aa302680383-100-100.jpg" title="袁承志">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/1386489/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/545864190001966102200220-100-100.jpg" title="YNNUF">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/1859239/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/552a77ac0001d9b601000100-100-100.jpg" title="zalman">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2051602/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/557bf8570001139b05100362-100-100.jpg" title="敲代码的小猴子">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2129848/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/559e23840001c06a06400640-100-100.jpg" title="weixin_九天_0">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2149269/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/55a5d300000142ba01000100-100-100.jpg" title="程小龙龙">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2184746/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/55b2d7090001594b07400715-100-100.jpg" title="issumao">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2432272/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/54586453000163bd02200220-100-100.jpg" title="柔弱小草">                                                </a></li><li class="l"><a target="_blank" href="http://www.imooc.com/u/2981232/articles">                                                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/575ffadb0001039606380618-100-100.jpg" title="ALVINYEH">                                                </a></li></ul>
                </div>

                <div class="praise-num l">
                    <span class="num">22</span>
                    <span class="person">人</span>推荐
                </div>
            </div>
        </div>
        
        <!-- 推荐end -->

        <!-- 分享&收藏 -->
        <div class="active-box clearfix">
            <div class="share-collect-wrap clearfix">
                <div class="share-box l">
                    <!-- 分享 -->
                    <div class="share-rl-tips share-posi js-share-statue l" style="display: none;">
                        <span>分享即可 +</span><strong>1积分</strong>
                        <span class="rule-arrow"></span>
                    </div>
                    <div class="small-share l">
                        <ul class="share-wrap">
                            <li class="weichat-posi">
                                <div class="bdsharebuttonbox weichat-style bdshare-button-style0-16" data-bd-bind="1471707056382">
                                    <a href="http://www.imooc.com/article/1216#" class="bds_weixin icon-nav icon-share-weichat" data-cmd="weixin" title="分享到微信"></a>
                                    <a href="http://www.imooc.com/article/1216#" class="bds_tsina icon-nav icon-share-weibo" data-cmd="tsina" title="分享到新浪微博"></a>
                                    <a href="http://www.imooc.com/article/1216#" class="bds_qzone icon-nav icon-share-qq" data-cmd="qzone" title="分享到QQ空间"></a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <!-- 分享end -->
                <!-- 收藏&举报 -->
                <div class="r-box r">
                                                            <span id="js-follow" data-id="1216" class="dc-follow l">
                            <span>收藏</span>
                        </span>
                                                    </div>
                <!-- 收藏&举报end -->
            </div>
        </div>
        <!-- 分享&收藏 end -->
    </div>
    <!-- 手记详情end -->
  
    <!-- 相关阅读 -->
    <div class="react-article">
        <h2>相关阅读</h2><ul><li><a href="http://www.imooc.com/article/1293" title="10 个你需要了解的最佳 Javascript 开发实践"><h3>10 个你需要了解的最佳 Javascript 开发实践</h3></a></li><li><a href="http://www.imooc.com/article/1683" title="编写高质量JavaScript代码"><h3>编写高质量JavaScript代码</h3></a></li><li><a href="http://www.imooc.com/article/2280" title="iOS开发——17条 Swift 最佳实践规范"><h3>iOS开发——17条 Swift 最佳实践规范</h3></a></li><li><a href="http://www.imooc.com/article/4357" title="那些 CSS 的设计失误（译）"><h3>那些 CSS 的设计失误（译）</h3></a></li><li><a href="http://www.imooc.com/article/4363" title="【学霸告诉你】改良程序的11技巧"><h3>【学霸告诉你】改良程序的11技巧</h3></a></li></ul>
    </div>
    <!-- 相关阅读end -->


    <div class="detail-feedback-wrap">
        <!-- 评论框 -->
        <div class="df-ipt-wrap" id="comment">
                    <div class="feeds-author">
                <span><img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/avatar_default.png" width="40" alt=""></span>
            </div>
            <div id="js-text-login" class="df-text df-text-login">
                <textarea class="ipt" readonly="">请登录后，发表评论</textarea>
                <div class="df-bottom clearfix">
                    <button id="js-submit" class="btn btn-green disabled r">评论（Enter+Ctrl）</button>
                </div>
            </div>
                </div>
        <!-- 评论框end -->

        <!-- 热门评论 -->
        <div class="hot-df-title" style="display: none;">热门评论</div>
        <div id="js-feedback-hot-list-wrap" class="feedback-list" style="display: none;">
            <p class="feedback-loading">
            评论加载中...
            </p>
        </div>
        <!-- 评论 -->
        <div class="df-title" id="all_comments">全部评论<span class="comment-num"><i>0</i>条</span></div>
        <div id="js-feedback-list-wrap" class="feedback-list"><p class="feedback-none">暂无评论</p></div>
        <!-- 分页页码  -->
        <div class="qa-comment-page"></div>
    </div>
</div><!-- 左侧end -->

<div class="detail-right r"><!-- 右侧start -->
    <!-- 作者信息 -->
        <div class="aside-author">
        <div class="p clearfix">
            <a href="http://www.imooc.com/u/264930/articles" class="l" title="IT程序狮" target="_blank">
                <img src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/57848bee000143ec02000200-100-100.jpg">
            </a>
        </div>
        <p class="u-nick-warp">
         <a class="nick" href="http://www.imooc.com/u/264930/articles" title="IT程序狮" target="_blank">
            IT程序狮
            </a>
                                    <i class="user-icon great" title="认证作者"></i>
                   
                    </p>
       
        <span class="user-job">Web前端工程师</span>
        <span class="user-desc">
            汇聚、分享优秀的IT技术资讯、文章。我是，程小狮。欢迎关注！^_^
        </span>
        <div class="btn-box clearfix">
            <a href="http://www.imooc.com/u/264930/articles" target="_blank" class="article-num r-bor l">
                <span>373</span>篇手记
            </a>
            <a href="http://www.imooc.com/u/264930/articles?type=praise" target="_blank" class="article-recom l">
                <span>424</span>推荐
            </a>
        </div>
    </div>
        <!-- 作者信息end -->

    <!-- 作者热门手记 -->
        <div class="other-article">
        <h2>作者的热门手记</h2>
        <ul>
                    <li>
                <a href="http://www.imooc.com/article/1512" title="12 个免费学习编程的好地方"><h3>12 个免费学习编程的好地方</h3></a>
                <div class="show-box clearfix">
                    <span class="spacer l">33189浏览</span>
                    <span class="spacer l spacer-2">479推荐</span>
                    <span class="spacer l" href="">72评论</span>
                </div>
            </li>
                    <li>
                <a href="http://www.imooc.com/article/1097" title="什么才算是真正的编程能力？"><h3>什么才算是真正的编程能力？</h3></a>
                <div class="show-box clearfix">
                    <span class="spacer l">25937浏览</span>
                    <span class="spacer l spacer-2">381推荐</span>
                    <span class="spacer l" href="">78评论</span>
                </div>
            </li>
                    <li>
                <a href="http://www.imooc.com/article/10467" title="学编程没人带？推荐10个免费学编程的最佳网站给你"><h3>学编程没人带？推荐10个免费学编程的最佳网站给你</h3></a>
                <div class="show-box clearfix">
                    <span class="spacer l">10727浏览</span>
                    <span class="spacer l spacer-2">221推荐</span>
                    <span class="spacer l" href="">23评论</span>
                </div>
            </li>
                    <li>
                <a href="http://www.imooc.com/article/1351" title="纯CSS3画出小黄人并实现动画效果"><h3>纯CSS3画出小黄人并实现动画效果</h3></a>
                <div class="show-box clearfix">
                    <span class="spacer l">9415浏览</span>
                    <span class="spacer l spacer-2">130推荐</span>
                    <span class="spacer l" href="">33评论</span>
                </div>
            </li>
                    <li>
                <a href="http://www.imooc.com/article/1285" title="29个你必须知道的Linux命令"><h3>29个你必须知道的Linux命令</h3></a>
                <div class="show-box clearfix">
                    <span class="spacer l">7462浏览</span>
                    <span class="spacer l spacer-2">149推荐</span>
                    <span class="spacer l" href="">12评论</span>
                </div>
            </li>
                </ul>
    </div>
        <!-- 作者热门手记end -->

    <!-- 广告 -->
                    <!-- 广告end -->
  
</div><!-- 右侧end -->

<!-- 手记目录 -->
<!-- 手记目录end -->


</div><!--opus-wrap end-->

<div id="main">

</div>

<div id="footer">
    <div class="waper">
        <div class="footerwaper clearfix">
            <div class="followus r">
                <a class="followus-weixin" href="javascript:;" target="_blank" title="微信">
                    <div class="flw-weixin-box"></div>
                </a>
                <a class="followus-weibo" href="http://weibo.com/u/3306361973" target="_blank" title="新浪微博"></a>
                <a class="followus-qzone" href="http://user.qzone.qq.com/1059809142/" target="_blank" title="QQ空间"></a>
            </div>
            <div class="footer_intro l">
                <div class="footer_link">
                    <ul>
                        <li><a href="http://www.imooc.com/" target="_blank">网站首页</a></li>
                        <li><a href="http://www.imooc.com/about/cooperate" target="_blank" title="企业合作">企业合作</a></li>
                        <li><a href="http://www.imooc.com/about/job" target="_blank">人才招聘</a></li>
                        <li> <a href="http://www.imooc.com/about/contact" target="_blank">联系我们</a></li>
                        <li><a href="http://www.imooc.com/corp/index" target="_blank">合作专区</a></li>
                        <li><a href="http://www.imooc.com/about/us" target="_blank">关于我们</a></li>
                        <li> <a href="http://www.imooc.com/about/recruit" target="_blank">讲师招募</a></li>
                        <li> <a href="http://www.imooc.com/user/feedback" target="_blank">意见反馈</a></li>
                        <li> <a href="http://www.imooc.com/about/friendly" target="_blank">友情链接</a></li>
                    </ul>
                </div>
                <p>Copyright © 2016 imooc.com All Rights Reserved | 京ICP备 13046642号-2</p>
            </div>
        </div>
    </div>
</div>


<div id="J_GotoTop" class="elevator">

    <a href="http://www.imooc.com/user/feedback" class="elevator-msg" title="意见反馈"><i class="icon-feedback"></i></a>
    <a href="javascript:" class="elevator-app" title="app下载">
      <i class="icon-appdownload"></i>
      <div class="elevator-app-box"></div>
    </a>
    <a href="javascript:" class="elevator-weixin" id="js-elevator-weixin" title="官方微信">
      <i class="icon-wxgzh"></i>
      <div class="elevator-weixin-box"></div>
    </a>
    <a href="javascript:void(0)" class="elevator-top no-goto" style="" title="返回顶部" id="backTop"><i class="icon-up2"></i></a>
</div>



<script type="text/javascript" charset="utf-8" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/ueditor.final.min.js"></script><script type="text/javascript" async="" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/1216"></script><script src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/learn.js" type="text/javascript"></script>

<!--script-->
<script src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/ssologin.js"></script>
<script type="text/javascript" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/sea.js"></script>
<script type="text/javascript" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/sea_config.js"></script>
<script type="text/javascript">seajs.use("/static/page/"+OP_CONFIG.module+"/"+OP_CONFIG.page);</script>






<div style="display: none">
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3Ff0cfcccd7b1393990c78efdeebff3968' type='text/javascript'%3E%3C/script%3E"));
(function (d) {
window.bd_cpro_rtid="rHT4P1c";
var s = d.createElement("script");s.type = "text/javascript";s.async = true;s.src = location.protocol + "//cpro.baidu.com/cpro/ui/rt.js";
var s0 = d.getElementsByTagName("script")[0];s0.parentNode.insertBefore(s, s0);
})(document);
</script><script src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/h.js" type="text/javascript"></script><a href="http://tongji.baidu.com/hm-web/welcome/ico?s=f0cfcccd7b1393990c78efdeebff3968" target="_blank"><img border="0" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/21.gif" width="20" height="20"></a>
<script>
(function(){
    var bp = document.createElement('script');
    bp.src = '//push.zhanzhang.baidu.com/push.js';
    var s = document.getElementsByTagName("script")[0];
    s.parentNode.insertBefore(bp, s);
})();
</script>
</div>


<script type="text/javascript" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/user"></script><script type="text/javascript" src="./Objective-C编码规范：26个方面解决iOS开发问题_慕课手记_files/iplookup.php"></script><div></div><div style="position: absolute; top: 100px; left: 100px; width: 164px; height: 164px; margin-left: -82px; margin-top: -82px; opacity: 1; display: none; transform: rotate(0deg) translate(0px, 0px);"><svg style="position: absolute; width: 100%; height: 100%;"><ellipse cy="0" cx="0" ry="7" rx="7" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="deeppink" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="7" rx="7" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="deeppink" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="7" rx="7" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="deeppink" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="7" rx="7" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="deeppink" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse><ellipse cy="0" cx="0" ry="7" rx="7" transform="rotate(0,0,0)" fill-opacity="1" stroke-linecap="" stroke-dashoffset="NaN " fill="deeppink" stroke-dasharray="NaN " stroke-opacity="1" stroke-width="0" stroke="transparent" style="opacity: 1; display: none;"></ellipse></svg></div></body></html>